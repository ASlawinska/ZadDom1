$tablet: 500;
$large: 768;
$desktop: 992;

@mixin tablet {
  @media only screen and (min-width: $tablet * 1px) {
    @content;
  }
}

@mixin large {
  @media only screen and (min-width: $large * 1px) {
    @content;
  }
}

@mixin desktop {
  @media only screen and (min-width: $desktop * 1px) {
    @content;
  }
}
@mixin fontsize($fsize, $lineHeight: 1){
  font-size: $fsize * 1px;
  font-size: $fsize * 0.0625rem;
  line-height: $lineHeight;}


@mixin google-font {
  @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');
  }
@mixin border($direction, $color) {
    @if variable-exists($direction) {
      border-#{$direction}: 2px solid $color;
  } @else {
      border: 2px solid $color;
  }}
@mixin textTransform($textTransform){
  text-transform: $textTransform;
}
@mixin bgc-img ($background-size, $background-position: null){
  background-repeat: no-repeat;
  background-size: $background-size;
  background-position: $background-position;
}
@mixin size($width, $height) {
  width: $width;
  height: $height;
}
@mixin wh($width: false, $height: false) {
	$width: unquote($width);
	@if $height != none { 
		$height: unquote($height); }
		
	@if $height != false {
		width: #{$width};
		height: #{$height}; }
	@else {
		width: #{$width};
		height: #{$width}; } }
@mixin margin($m-direction, $m-amount) {
  @if $m-direction == all {
    margin: $m-amount;
  } @else {
    margin-#{$m-direction}: $m-amount;
  }
}
@mixin position($top: null, $right: null, $bottom: null, $left: null) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}
@mixin transition($arg...) {
  -webkit-transition: $arg;
  -moz-transition: $arg;
  -ms-transition: $arg;
  -o-transition: $arg;
  transition: $arg;
}
@mixin translate($x...) {
  -webkit-transform: translate($x);
  -moz-transform: translate($x);
  -ms-transform: translate($x);
  -o-transform: translate($x);
  transform: translate($x);
}
@mixin scale($x, $y: $x) {
  -webkit-transform: scale ($x, $y);
  -moz-transform: scale ($x, $y);  
  -ms-transform: scale ($x, $y);
  -o-transform: scale ($x, $y);
  transform: scale ($x, $y);
}
@mixin transfOrigin($x, $y) {
  -webkit-transform-origin: $x, $y;
  -moz-transition-origin: $x, $y;  -ms-transform-origin: $x, $y;
  -o-transform-origin: $x, $y;
  transform-origin: $x, $y;
}
